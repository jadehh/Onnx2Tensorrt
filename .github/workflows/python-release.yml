name: Onnx2Tensorrt

on:
  push:
    tags:
      - v*

jobs:
  release:
    name: ${{ matrix.os }} 创建Release
    runs-on:  ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest" ] #, "macos-latest", "windows-latest"
    steps:
      - name: 克隆代码
        uses: actions/checkout@v3
      - name: 创建发行版本
        continue-on-error: true
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body_path: CONTRIBUTING.md
          draft: false
          prerelease: false

  amd64_job:
    name:  ${{ matrix.device_type }} Onnx2Tensorrt
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest" ] #, "macos-latest", "windows-latest"
    steps:
      - name: 下载代码
        uses: actions/checkout@v3
        with:
          repository: jadehh/Onnx2Tensorrt
          ref: main
          path: code
          token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT
      - name: 编译打包
        uses: addnab/docker-run-action@v3
        with:
          image: jadehh/python:3.8.16-ubuntu18.04
          options: -v ${{ github.workspace }}/code:/code
          run: |
           cd /code
           pip install -r requirements.txt
            python packing.py --full True  --app_name onnx2trt
      - name: 发布
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files:
            "./code/Output/*"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }} # 给最高的权限

